plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    configureEach {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.auth0:java-jwt:4.4.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.765'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// jackson
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Slack
	implementation 'net.gpedro.integrations.slack:slack-webhook:1.4.0'
	implementation 'com.slack.api:slack-api-client:1.40.3'

}

def generatedDir =  "src/main/generated"


sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		resources{
			srcDir "${project.projectDir}/src/main/java"
		}
	}
}

clean {
	delete file(generatedDir)
}

tasks.named('test') {
	useJUnitPlatform()
}
